package com.topideal.supplychain.ocp.amway.converter;

import com.google.common.collect.Lists;
import com.topideal.supplychain.ocp.enums.BusiModeEnum;
import com.topideal.supplychain.ocp.ofc.dto.OfcGoodsReqDto;
import com.topideal.supplychain.ocp.ofc.dto.OfcOrderReqDto;
import com.topideal.supplychain.ocp.ofc.dto.OfcRequest;
import com.topideal.supplychain.ocp.order.model.OrderAmway;
import com.topideal.supplychain.ocp.order.model.OrderAmwayItem;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

public class AmwayDtoConverter {

    public static OfcRequest convertOfc(OrderAmway dto, List<OrderAmwayItem> itemList) {

        OfcOrderReqDto.Builder build = OfcOrderReqDto.newBuilder()
                .key(null)
                .orderNo(dto.getOrderNumber())
                .declTime(dto.getSaleDate())
                .buyerRegNo(dto.getShipToDst())
                .buyerIdType("1")
                .buyerIdNumber(dto.getCustomerId())
                .receiveNo(dto.getCustomerId())
                .buyerName(dto.getConsigneeName())
                .consignee(dto.getConsigneeName())
                .consigneeTelephone(!StringUtils.isBlank(dto.getConsigneeMobile()) ? dto.getConsigneeMobile() : dto.getConsigneeLandNo())
                .buyerTelephone(!StringUtils.isBlank(dto.getConsigneeMobile()) ? dto.getConsigneeMobile() : dto.getConsigneeLandNo())
                .consigneeAddress(StringUtils.isNotBlank(dto.getShipToAddress31()) ? dto.getShipToAddress31() + dto.getShipToAddress4() : dto.getShipToAddress4())
                .province(dto.getShipToAddress1())
                .city(dto.getShipToAddress2())
                .district(dto.getShipToAddress3())
                .postCode(dto.getPosCode())
                .goodsValue(dto.getPaymentHeaderAmount())
                .freight(dto.getDeliveryFee())
                .discount(dto.getOrderDiscount())
                .taxTotal(dto.getTaxFee())
                .taxCurr("CNY")
                .acturalPaid(dto.getPaymentHeaderAmount())
                .insuredFee(dto.getDeliveryInsuranceFee())
                .freightCurr("CNY")
                .ebpCode(dto.getEbpCode())
                .ebcCode(dto.getEbcCode())
                .customsCode(dto.getCustoms())
                .ciqbCode("000069")
                .ieFlag("I")
                .busiMode(BusiModeEnum.BBC.getValue())
                .orderType(3L)
                .packNo(1L)
                .logisticsCode(dto.getDeliveryCode())
                .udf1(dto.getStaffNumber())
                .udf2(dto.getOrderType())
                .udf3(dto.getDistributorName())
                .udf4(dto.getDistributorNumber())
                .payTime(dto.getPaymentDateTime())
                .orderSource(401L)
                .storeCode(dto.getWarehouseId())
                .userId(null)
                .pod(null)
                .country(null)
                .payCurr(null)
                .insurCurr(null)
                .fCode(null)
                .ebpName(null)
                .ebcName(null)
                .userName(null)
                .logisticsName(null)
                .logisticsNo(null)
                .logisticsNote(null)
                .payCode(null)
                .payName(null)
                .payTransactionId(null)
                .payNote(null)
                .orderStatus(null)
                .customsType(null)
                .statisticsFlag(null)
                .trafMode(null)
                .trafNo(null)
                .voyageNo(null)
                .billNo(null)
                .shippernCode(null)
                .wrapType(null)
                .shipDate(null)
                .inputDate(null)
                .shipperName(null)
                .shipperAddress(null)
                .shipperPhone(null)
                .grossWeight(null)
                .netWeight(null)
                .fromEplat(null)
                .printHeader(null)
                .changeFlag(null)
                .traceFlag(null)
                .reDeclare(null)
                .vmiFlag(null)
                .ownerFlag(null)
                .isStoreStrategy(null)
                .platformOrderType(null)
                .ownerUserId(null)
                .ownerUserName(null)
                .lpCode(null)
                .deliveryTimePreference(null)
                .isPackage(null)
                .transportday(null)
                .note(null)
                .tradeMode(null)
                .commonField(null)
                .orderBatchNo(null)
                .businessType(null)
                .cBCode(null)
                .declareFormNo(null);
        OfcOrderReqDto ofcOrderReqDto = build.build();

        List<OfcGoodsReqDto> list = Lists.newArrayList();
        for (int i = 0; i < itemList.size(); i++) {
            OrderAmwayItem item = itemList.get(i);

            OfcGoodsReqDto ofcGoodsReqDto = OfcGoodsReqDto.newBuilder()
                    .gnum(String.valueOf(i + 1))
                    .goodsId(item.getItemSku())
                    .goodsName(item.getOrderingItemName())
                    .currency("CNY")
                    .price(item.getUnitDp())
                    .qty(item.getOrderQty())
                    .totalPrice(item.getUnitDp().multiply(item.getOrderQty()))
                    .ebcCode(dto.getEbcCode())
                    .inventoryType("1")
                    .itemVersion("1.0")
                    .udf1(item.getOrderingItemNumber())
                    .udf2(item.getMixLogisticsCode())
                    .udf3(item.getMixLogisticsName())
                    .barCode(null)
                    .qtyUnit(null)
                    .batchNo(null)
                    .storeStrategyId(null)
                    .productionTime(null)
                    .expDate(null)
                    .virtualOwner(null)
                    .note(null)
                    .hsCode(null)
                    .ciqGoodsNo(null)
                    .assemCountry(null)
                    .ciqAssemCountry(null)
                    .spec(null)
                    .brand(null)
                    .packageType(null)
                    .qty1(null)
                    .unit1(null)
                    .gQty1(null)
                    .qty2(null)
                    .gQty2(null)
                    .unit2(null)
                    .grossWeight(null)
                    .netWeight(null)
                    .isGoodsRecord(null)
                    .tradeUrl(null)
                    .billNo(null)
                    .declareCode(null)
                    .ciqDeclareCode(null)
                    .ciqInboundDeclareCode(null).build();
            list.add(ofcGoodsReqDto);
        }
        return new OfcRequest(ofcOrderReqDto, list);

    }
}
